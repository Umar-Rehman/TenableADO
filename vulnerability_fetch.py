import requests

def fetch_vulnerabilities(credentials, filter_params):
    url = f"{credentials.base_url}/workbenches/assets/vulnerabilities?"
    
    for idx, filter_param in enumerate(filter_params):
        url += f"date_range=30&filter.{idx}.filter={filter_param['filter']}&filter.{idx}.quality={filter_param['quality']}&filter.{idx}.value={filter_param['value']}"

    vulnerabilities_response = requests.get(url, headers={
        "X-ApiKeys": f"accessKey={credentials.access_key}; secretKey={credentials.secret_key}"
    })

    if vulnerabilities_response.status_code == 200:
        vulnerabilities_data = vulnerabilities_response.json()
        return vulnerabilities_data
    else:
        raise Exception(f"Failed to fetch vulnerabilities from Tenable. Status code: {vulnerabilities_response.status_code}")
